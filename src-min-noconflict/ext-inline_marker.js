ace.define("ace/ext/inline_marker",[],function(e,t,n){"use strict";function a(e){i.call(this,arguments),e.on("changeAnnotation",this.$updateCallback=o.delayedCall(function(){var t=e.$annotations;if(!t)return;var n={error:5,warning:4,info:1};this.clearMarkers();for(var r=t.length;r--;){var i=t[r];if(i.column==undefined)continue;var u=i.column,a;i.end&&i.end.column>u?a=i.end.column:(u>0&&u--,a=u+1);var f=new s(i.row,u,(i.end||i).row,a);f.message=o.escapeHTML(i.text),f.type=i.type;var l=this.add(f);if(l.length>0){var c=l.length;s.comparePoints(l[0].start,f.start)<0&&(f.start=l[0].start);var h=l[c-1];s.comparePoints(h.end,f.end)>-1&&(f.end=h.end);var p=n[i.type];for(var d=0;d<c;d++)f.message+="</br>"+l[d].message,n[i.type]>p&&(f.type=i.type,p=n[i.type])}}for(var v=0,m=this.ranges,g=m.length;v<g;v++){var y=m[v];y.id=e.addMarker(y,"ace_inline_annotation ace_inline_"+(y.type?y.type:"default"),"text")}}.bind(this))),this.$dismiss=this.dismiss.bind(this),this.attach(e),this.$updateChange=function(){e._signal("changeBackMarker")},this.session.on("change",this.$updateChange),this.$updateCallback()}var r=e("../lib/oop"),i=e("../range_list").RangeList,s=e("../range").Range,o=e("../lib/lang"),u=e("../tooltip").Tooltip;(function(){r.implement(this,i.prototype),this.showError=function(e,t){if(this.activeTip)return;if(!this.session.selection.isEmpty())return;t=t||this.session.selection.getCursor();var n=this.rangeAtPoint(t);if(!n)return;var r=e.$inlineTip||(e.$inlineTip=new u(e.container));r.setHtml("<span class='ace_"+n.type+"'>"+n.message+"</span>");var i=e.renderer.textToScreenCoordinates(t.row,t.column);i.pageY+=e.renderer.layerConfig.lineHeight,r.show(),r.setPosition(Math.max(0,i.pageX-r.getElement().offsetWidth*.5),i.pageY);var s=this;s.activeTip=r,s.activeTip.editor=e,e.on("changeSelection",s.$dismiss)},this.dismiss=function(){if(!this.activeTip)return;this.activeTip.hide(),this.activeTip.editor.off("changeSelection",this.$dismiss),this.activeTip=null},this.clearMarkers=function(){this.ranges.forEach(function(e){this.removeMarker(e.id)},this.session),this.ranges=[]},this.detach=function(){this.clearMarkers(),this.session.off("changeAnnotation",this.$updateCallback),this.session.off("change",this.$updateChange),i.prototype.detach.apply(this)}}).call(a.prototype),t.InlineMarkers=a});
                (function() {
                    ace.require(["ace/ext/inline_marker"], function(m) {
                        if (typeof module == "object" && typeof exports == "object" && module) {
                            module.exports = m;
                        }
                    });
                })();
            