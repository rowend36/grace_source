Grace targets are limited to  
1) Make long running ops microtasks, that way they can be scheduled or run in a different task
2) Make a variety of autocompletion tools. Not necessarily with a parser. Read code like a human. Is that even possible
3) Maximize use of screen space
4) Lint and beautify code where possible
5) Reduce memory footprint where possible.

Outside Grace scope
1) Compilation
2) Running code
For those it assumes the user has a terminal. Use the terminal command.

Gray Areas
1) Git support
2) File operations
3) File servers

Grace Dependency Behaviour
- Really funny. Rather than using dependencies, I just wrote everything from
 scratch.

_Define
Why _Define? Simple. It was initially a one man project. 
_Define allowed me to get the best of both worlds.
You know the function names. Why bother with where they are located
var Utils = global.Utils works all the time.
Splitting files is simple. Merging them is even easier.
It's like Java, actually. Not suitable for big projects but I loved it.
Untils Object.keys(global).length became 156
Think of it like a really large index.js.


